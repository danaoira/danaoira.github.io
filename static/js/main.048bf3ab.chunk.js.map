{"version":3,"sources":["utils/theme.js","utils/links.js","style.js","App.js","AppMenu.js","serviceWorker.js","index.js"],"names":["theme","pink","lightgray","darkgray","black","white","yellow","fontFamily","accent","default","fontSize","lineHeight","fontWeight","extraLight","light","book","medium","bold","links","styled","div","_templateObject","AppWrapper","_templateObject2","Menu","_templateObject3","Title","h1","_templateObject4","color","type","Subtitle","h2","_templateObject5","List","ul","_templateObject6","Link","a","_templateObject7","App","_templateObject8","react_default","createElement","Component","ListItem","_ref","text","url","last","href","AppMenu","AppMenu_ListItem","Boolean","window","location","hostname","match","ReactDOM","render","src_AppMenu","document","getElementById","src_App","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sPAAMA,EAAQ,CAEdA,MAAc,CACZC,KAAM,UACNC,UAAW,UACXC,SAAU,UACVC,MAAO,UACPC,MAAO,UACPC,OAAQ,WAGVN,KAAa,CACXO,WAAY,wBACZC,OAAQ,CACND,WAAY,0BAEdE,QAAS,CACPF,WAAY,yBAEdG,SAAU,CACR,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAEFC,WAAY,CACV,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAEFC,WAAY,CACVC,WAAY,IACZC,MAAO,IACPC,KAAM,IACNC,OAAQ,IACRC,KAAM,IACNb,MAAO,OAIIJ,ICpDAkB,EAHA,6BAGAA,EAFE,20CCEDC,IAAOC,IAAVC,KAAb,IAEMC,EAAaH,IAAOC,IAAVG,KAIVC,EAAOL,IAAOC,IAAVK,KAIJC,EAAQP,IAAOQ,GAAVC,IACA5B,EAAM6B,MAAMzB,MACNJ,EAAM8B,KAAKtB,OAAOD,WAClBP,EAAM8B,KAAKlB,WAAWC,YAMjCkB,EAAWZ,IAAOa,GAAVC,IACGjC,EAAM8B,KAAKrB,QAAQF,WACnBP,EAAM8B,KAAKlB,WAAWC,WAE5Bb,EAAM6B,MAAMzB,OAKjB8B,EAAOf,IAAOgB,GAAVC,KAOJC,EAAOlB,IAAOmB,EAAVC,IACCvC,EAAM6B,MAAMzB,MACNJ,EAAM8B,KAAKtB,OAAOD,WAUtBP,EAAM6B,MAAMzB,MACPJ,EAAM6B,MAAM5B,MCtCfuC,GD0CGrB,IAAOC,IAAVqB,IACJzC,EAAM6B,MAAMzB,MACNJ,EAAM8B,KAAKrB,QAAQF,WACnBP,EAAM8B,KAAKlB,WAAWC,6LCrDnC,OACE6B,EAAAJ,EAAAK,cAACrB,EAAD,KACEoB,EAAAJ,EAAAK,cAAA,oBAJUC,cCOZC,EAAW,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAMC,EAATF,EAASE,IAAKC,EAAdH,EAAcG,KAAd,OACfP,EAAAJ,EAAAK,cAAA,UAAID,EAAAJ,EAAAK,cAACN,EAAD,CAAMa,KAAMF,GAAMD,GAAtB,KAAqCE,GAAQ,IAA7C,UAqBaE,mLAhBX,OACET,EAAAJ,EAAAK,cAACnB,EAAD,KACEkB,EAAAJ,EAAAK,cAACjB,EAAD,kBACAgB,EAAAJ,EAAAK,cAACZ,EAAD,0BAA4BW,EAAAJ,EAAAK,cAAA,WAA5B,qBACAD,EAAAJ,EAAAK,cAACT,EAAD,KACEQ,EAAAJ,EAAAK,cAACS,EAAD,CAAUL,KAAM,UAChBL,EAAAJ,EAAAK,cAACS,EAAD,CAAUL,KAAM,cAChBL,EAAAJ,EAAAK,cAACS,EAAD,CAAUL,KAAM,WAAYC,IAAK9B,IACjCwB,EAAAJ,EAAAK,cAACS,EAAD,CAAUL,KAAM,SAAUC,IAAK9B,IAC/BwB,EAAAJ,EAAAK,cAACS,EAAD,CAAUL,KAAM,QAASC,IAAK,sCAXlBJ,aCFFS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAOjB,EAAAJ,EAAAK,cAACiB,EAAD,MAAaC,SAASC,eAAe,SACrDJ,IAASC,OAAOjB,EAAAJ,EAAAK,cAACoB,EAAD,MAASF,SAASC,eAAe,SDyH3C,kBAAmBE,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.048bf3ab.chunk.js","sourcesContent":["const theme = {}\n\ntheme.color = {\n  pink: '#EEDEDE',\n  lightgray: '#CCCBC9',\n  darkgray: '#343434',\n  black: '#343434',\n  white: '#FFFFFF',\n  yellow: '#FFFF00'\n}\n\ntheme.type = {\n  fontFamily: \"'Raleway', sans-serif\",\n  accent: {\n    fontFamily: \"'Noto Serif TC', serif\"\n  },\n  default: {\n    fontFamily: \"'Raleway', sans-serif\"\n  },\n  fontSize: [\n    '9px',\n    '11px',\n    '14px',\n    '16px',\n    '22px',\n    '27px',\n    '33px',\n    '44px',\n    '55px',\n    '66px',\n    '88px'\n  ],\n  lineHeight: [\n    '12px',\n    '16px',\n    '18px',\n    '22px',\n    '26px',\n    '32px',\n    '36px',\n    '46px',\n    '56px',\n    '66px',\n    '88px',\n  ],\n  fontWeight: {\n    extraLight: 200,\n    light: 300,\n    book: 400,\n    medium: 500,\n    bold: 700,\n    black: 800\n  }\n}\n\nexport default theme","const github = 'http://github.com/danaoira'\nconst linkedin = 'http://linkedin.com/in/danaoira'\n\nexport default {\n  github,\n  linkedin\n}","import styled from 'styled-components'\nimport { theme } from './utils'\n\nconst Wrapper = styled.div``\n\nconst AppWrapper = styled.div`\n  min-height: 100vh;\n`\n\nconst Menu = styled.div`\n  padding-left: 2em;\n`\n\nconst Title = styled.h1`\n  color: ${theme.color.black};\n  font-family: ${theme.type.accent.fontFamily};\n  font-weight: ${theme.type.fontWeight.extraLight};\n  font-size: 3em;\n  line-height: 1em;\n  text-decoration: none;\n`\n\nconst Subtitle = styled.h2`\n  font-family: ${theme.type.default.fontFamily};\n  font-weight: ${theme.type.fontWeight.extraLight};\n  font-size: 1.5em;\n  color: ${theme.color.black};\n  text-decoration: none;\n  letter-spacing: 1px;\n`\n\nconst List = styled.ul`\n  line-height: 1.5em;\n  list-style: none;\n  list-style-position: outside;\n  padding: 0;\n`\n\nconst Link = styled.a`\n  color: ${theme.color.black};\n  font-family: ${theme.type.accent.fontFamily};\n  font-size: 1em;\n  text-decoration: none;\n\n  :link {\n    cursor: url(http://static.tumblr.com/xjqjg7j/XJOlou09h/blackcursor.png),\n    url(http://static.tumblr.com/xjqjg7j/XJOlou09h/blackcursor.png), auto;\n  }\n\n  :hover {\n    color: ${theme.color.black};\n    background: ${theme.color.pink};\n  }\n`\n\nconst Paragraph = styled.div`\n  color: ${theme.color.black};\n  font-family: ${theme.type.default.fontFamily};\n  font-weight: ${theme.type.fontWeight.extraLight};\n`\n\nexport {\n  Wrapper,\n  AppWrapper,\n  Menu,\n  Title,\n  Subtitle,\n  List,\n  Link,\n  Paragraph\n}","import React, { Component } from 'react'\nimport { Wrapper, AppWrapper } from './style'\n\nclass App extends Component {\n  render() {\n    return (\n      <AppWrapper>\n        <div></div>\n      </AppWrapper>\n    )\n  }\n}\n\nexport default App\n","import React, { Component } from 'react'\nimport { links } from './utils'\nimport { \n  Menu,\n  Title,\n  Subtitle,\n  List,\n  Link\n} from './style'\n\nconst ListItem = ({ text, url, last }) => (\n  <li><Link href={url}>{text}</Link> {!last && ' '}&nbsp; </li>\n)\n\nclass AppMenu extends Component {\n  render() {\n    return (\n      <Menu>\n        <Title>Dana Oira</Title>\n        <Subtitle>Data Visualization<br />Software Engineer</Subtitle>\n        <List>\n          <ListItem text={'About'} />\n          <ListItem text={'Portfolio'} />\n          <ListItem text={'LinkedIn'} url={links.linkedin} />\n          <ListItem text={'GitHub'} url={links.github} />\n          <ListItem text={'Email'} url={'mailto:danaoira@live.com'} />\n        </List>\n      </Menu>\n    )\n  }\n}\n\nexport default AppMenu\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport AppMenu from './AppMenu'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<AppMenu />, document.getElementById('menu'))\nReactDOM.render(<App />, document.getElementById('main'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}